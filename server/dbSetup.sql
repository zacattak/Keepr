-- Active: 1711124626342@@52.10.21.221@3306@patient_sasquatch_480188_db
CREATE TABLE IF NOT EXISTS accounts (
    id VARCHAR(255) NOT NULL primary key COMMENT 'primary key', createdAt DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT 'Time Created', updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Last Update', name varchar(255) COMMENT 'User Name', email varchar(255) COMMENT 'User Email', picture varchar(255) COMMENT 'User Picture', coverImg VARCHAR(1000)
) default charset utf8mb4 COMMENT '';

CREATE TABLE keeps (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, createdAt DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT 'Time Created', updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Last Update', creatorId VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(1000) NOT NULL, img VARCHAR(1000) NOT NULL, kept INT NOT NULL DEFAULT, views INT NOT NULL DEFAULT 0, FOREIGN KEY (creatorId) REFERENCES accounts (id) ON DELETE CASCADE
)

CREATE TABLE vaults (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, createdAt DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT 'Time Created', updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Last Update', creatorId VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, description VARCHAR(1000) NOT NULL, img VARCHAR(1000) NOT NULL, isPrivate BOOLEAN NOT NULL DEFAULT false, FOREIGN KEY (creatorId) REFERENCES accounts (id) ON DELETE CASCADE
)

create TABLE vaultKeeps (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, createdAt DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT 'Time Created', updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Last Update', creatorId VARCHAR(255) NOT NULL, vaultId INT NOT NULL, keepId INT NOT NULL, FOREIGN KEY (creatorId) REFERENCES accounts (id) ON DELETE CASCADE, FOREIGN KEY (vaultId) REFERENCES vaults (id) ON DELETE CASCADE, FOREIGN KEY (keepId) REFERENCES keeps (id) ON DELETE CASCADE
)

create TABLE tags (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, createdAt DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT 'Time Created', updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Last Update', creatorId VARCHAR(255) NOT NULL, name VARCHAR(100) NOT NULL, FOREIGN KEY (creatorId) REFERENCES accounts (id) ON DELETE CASCADE
)

-- CREATE TABLE tags (
--     id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, 
--     createdAt DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT 'Time Created', 
--     updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Last Update', 
--     creatorId VARCHAR(255) NOT NULL, 
--     name VARCHAR(100) NOT NULL, 
--     UNIQUE (name COLLATE utf8mb4_unicode_ci),  -- Case-insensitive uniqueness
--     FOREIGN KEY (creatorId) REFERENCES accounts (id) ON DELETE CASCADE
-- );
create TABLE keepTags (
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL, createdAt DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT 'Time Created', updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Last Update', creatorId VARCHAR(255) NOT NULL, keepId INT NOT NULL, tagId INT NOT NULL, FOREIGN KEY (creatorId) REFERENCES accounts (id) ON DELETE CASCADE, FOREIGN KEY (keepId) REFERENCES keeps (id) ON DELETE CASCADE, FOREIGN KEY (tagId) REFERENCES tags (id) ON DELETE CASCADE
)

ALTER TABLE accounts ADD coverImg varchar(255);

DROP TABLE IF EXISTS tags;
ALTER TABLE tags 
CHANGE COLUMN tag name VARCHAR(100) NOT NULL;


ALTER TABLE tags
ADD lower_name VARCHAR(100);

UPDATE tags
SET lower_name = LOWER(name);

ALTER TABLE tags
ADD CONSTRAINT uc_lower_name UNIQUE (lower_name);

DELETE t1
FROM tags t1
JOIN tags t2 ON LOWER(t1.name) = LOWER(t2.name) AND t1.id > t2.id;

DELIMITER //

CREATE TRIGGER before_insert_tag
BEFORE INSERT ON tags
FOR EACH ROW
BEGIN
  SET NEW.lower_name = LOWER(NEW.name);
END;
//

CREATE TRIGGER before_update_tag
BEFORE UPDATE ON tags
FOR EACH ROW
BEGIN
  SET NEW.lower_name = LOWER(NEW.name);
END;
//

DELIMITER ;

-- ALTER TABLE tags 
-- ADD CONSTRAINT uc_name UNIQUE (LOWER(name));

SELECT keep.*, account.*
FROM keeps keep
    JOIN accounts account ON keep.creatorId = account.id;

update keeps kept set kept = 0;